{"version":3,"sources":["API.js","testing/test.js","index.js"],"names":["API","axios","create","baseURL","headers","Testing","useState","textSubmitting","settextSubmitting","rcvAudio","setrcvAudio","e","a","preventDefault","console","log","alert","length","get","response","status","data","className","onSubmit","name","rows","cols","placeholder","onChange","target","value","type","substring","id","src","autoPlay","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAUeA,E,OARHC,EAAMC,OAAO,CACrBC,QAAS,iDACTC,QAAS,CACL,kBAAmB,yCACnB,iBAAkB,wD,OCmFXC,MAtFf,WAEI,MAA4CC,mBAAS,IAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAHe,4CASf,WAA6BC,GAA7B,eAAAC,EAAA,yDACID,EAAEE,iBACFC,QAAQC,IAAI,oBAAqBR,GAEV,KAAnBA,EAJR,uBAKQS,MAAM,iBALd,+BASQT,EAAeU,OAAS,MAThC,uBAUQD,MAAM,oBAVd,gCAeiB,mCAEC,QACC,MACC,kBACG,EApBvB,UAsB2BhB,EAAIkB,IAAJ,gBAPV,mCAOU,eALT,QAKS,cAJR,MAIQ,cAHP,iBAGO,gBAA0EX,EAA1E,gBAFJ,OApBvB,WAwB4B,OAFlBY,EAtBV,QAwBiBC,OAxBjB,iBAyBQN,QAAQC,IAAI,UACZD,QAAQC,IAAI,aAAcI,GAC1BL,QAAQC,IAAI,kBAAmBI,EAASE,MAExCX,EAAYS,EAASE,MA7B7B,+BAmCQP,QAAQC,IAAI,UAAUI,EAASC,QAnCvC,gEATe,sBAwEf,OACI,qBAAKE,UAAU,UAAf,SACI,sBAAKA,UAAU,gBAAf,UACI,uBAAMC,SA3EH,4CA2EH,UACI,8DACA,0BAAUC,KAAK,YAAYC,KAAK,IAAIC,KAAK,KAAKC,YAAY,2BAA2BC,SAxErG,SAA4BjB,GACxBH,EAAkBG,EAAEkB,OAAOC,UAwEf,uBAAOC,KAAK,SAASD,MAAM,cA3BxB,KAAXrB,EAEI,mDAIwB,UAA5BA,EAASuB,UAAU,EAAE,GAEjB,4BAAIvB,IAKR,gCACA,2CACA,uBAAOwB,GAAG,cAAcC,IAAKzB,EAAU0B,SAAS,WAAhD,0CC/DZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAGFC,SAASC,eAAe,W","file":"static/js/main.1f65960d.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst API = axios.create({\r\n    baseURL: 'https://voicerss-text-to-speech.p.rapidapi.com',\r\n    headers: {\r\n        'x-rapidapi-host': 'voicerss-text-to-speech.p.rapidapi.com',\r\n        'x-rapidapi-key': 'bd52c7831bmsh885f8cdd1f00f06p13ec79jsn09e6320cff58'\r\n    }\r\n});\r\n\r\nexport default API;","import React, { useState } from 'react';\r\nimport API from '../API';\r\n\r\nfunction Testing() {\r\n\r\n    const [textSubmitting, settextSubmitting] = useState(\"\");\r\n    const [rcvAudio, setrcvAudio] = useState(\"\");    \r\n\r\n    function handleInputChange (e) {\r\n        settextSubmitting(e.target.value);\r\n    }\r\n\r\n    async function handleSubmit (e) {\r\n        e.preventDefault();\r\n        console.log('Submitting text: ', textSubmitting);\r\n\r\n        if (textSubmitting === '') {\r\n            alert('string empty!');\r\n            return;\r\n        } // dont waste GET attempt with empty string, daily 350 limit\r\n        \r\n        if (textSubmitting.length > 49000) {\r\n            alert('string too long!');\r\n            return;\r\n        } // dont waste GET attempt with string exceed 100kb limit\r\n\r\n        // let apikey = \"5\"; // false key for error testing\r\n        let apikey = \"52b16d4b4f1246ee800ea25d1b9fe536\"; // key tied to my email\r\n        // let apilang = \"zh-cn\";\r\n        let apilang = \"en-us\";\r\n        let apicodec = \"MP3\";\r\n        let apiformat = \"8khz_8bit_mono\"; // default is 8khz_8bit_mono\r\n        let apiB64Status = true; // default is false, true for output as Base64 string format\r\n\r\n        const response = await API.get(`/?key=${apikey}&hl=${apilang}&c=${apicodec}&f=${apiformat}&src=${textSubmitting}&b64=${apiB64Status}`);\r\n\r\n        if (response.status === 200) {\r\n            console.log('200 ok');\r\n            console.log('Response: ', response);\r\n            console.log('Response.data: ', response.data);\r\n\r\n            setrcvAudio(response.data);\r\n            \r\n            // setrcvAudio(\"https://www.learningcontainer.com/wp-content/uploads/2020/02/Kalimba.mp3\");\r\n            \r\n\r\n        } else {\r\n            console.log('error: ',response.status);\r\n            return;\r\n            }\r\n    }\r\n\r\n    const playAudio = () => {\r\n\r\n        if (rcvAudio===\"\") {\r\n            return (\r\n                <p>no audio currently</p>\r\n            )\r\n        }\r\n\r\n        if (rcvAudio.substring(0,5) === \"ERROR\") {\r\n            return (\r\n                <p>{rcvAudio}</p>\r\n            )\r\n        } // api has its own defined error set\r\n\r\n        return (\r\n            <div>\r\n            <p>have audio</p>\r\n            <audio id=\"audioPlayer\" src={rcvAudio} autoPlay=\"autoplay\">audio not supported</audio>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='canvass'>\r\n            <div className='displayWindow'>\r\n                <form onSubmit={handleSubmit}>\r\n                    <h3>Input text for speech return</h3>                    \r\n                    <textarea name=\"audiotext\" rows=\"4\" cols=\"50\" placeholder='Punctuation/numerals ok.' onChange={handleInputChange}></textarea>\r\n                    <input type='submit' value='Submit' />\r\n                </form>\r\n                {playAudio(rcvAudio)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Testing;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Testing from './testing/test';\n// import SingleDisplay from './screens/SingleDisplay';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Testing />\n    {/* <SingleDisplay /> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}