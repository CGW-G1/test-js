{"version":3,"sources":["API.js","testing/test.js","testing/ytmusic.js","index.js"],"names":["axios","create","baseURL","headers","Testing","YTtesting","testText","YTMAPI","YoutubeMusicApi","initalize","then","info","search","result","console","log","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+LAEYA,EAAMC,OAAO,CACrBC,QAAS,iDACTC,QAAS,CACL,kBAAmB,yCACnB,iBAAkB,wD,MCyHXC,I,iBCpGAC,MAxBf,WAEI,IAAIC,EAAW,aAETC,EAAS,IAAIC,IAQnB,OANAD,EAAOE,YACFC,MAAK,SAAAC,GACFJ,EAAOK,OAAON,EAAU,QAAQI,MAAK,SAAAG,GAAM,OAAIC,QAAQC,IAAI,gBAAiBF,SAKhF,qBAAKG,UAAU,UAAf,SACI,sBAAKA,UAAU,iBAAf,UACI,kDAEA,4BAAIV,UCbpBW,IAASC,OACP,cAAC,IAAMC,WAAP,UAEE,cAAC,EAAD,MAGFC,SAASC,eAAe,U","file":"static/js/main.02301c43.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst API = axios.create({\r\n    baseURL: 'https://voicerss-text-to-speech.p.rapidapi.com',\r\n    headers: {\r\n        'x-rapidapi-host': 'voicerss-text-to-speech.p.rapidapi.com',\r\n        'x-rapidapi-key': 'bd52c7831bmsh885f8cdd1f00f06p13ec79jsn09e6320cff58'\r\n    }\r\n});\r\n\r\nexport default API;","import React, { useState } from 'react';\r\nimport API from '../API';\r\nimport langList from './lang';\r\n\r\nfunction Testing() {\r\n\r\n    const [textSubmitting, settextSubmitting] = useState(\"\");\r\n    const [rcvAudio, setrcvAudio] = useState(\"\");\r\n    const [langSubmit, setlangSubmit] = useState('en-us');\r\n\r\n    const selectLang = () => {\r\n\r\n        const optionLang = langList.map((x,i) => {\r\n            return (\r\n                <option key={`${x}-${i}`} value={x.langv}>{x.langtxt}</option>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <select id='lang' name = 'lang' defaultValue='en-us' onChange={handleLangChange}>\r\n                {optionLang}\r\n            </select>\r\n        )\r\n    }\r\n\r\n    function handleInputChange (e) {\r\n        settextSubmitting(e.target.value);\r\n    }\r\n\r\n    function handleLangChange (e) {\r\n        setlangSubmit(e.target.value);\r\n    }\r\n\r\n    async function handleSubmit (e) {\r\n        e.preventDefault();\r\n        console.log('Submitting text: ', textSubmitting);\r\n        console.log('Submitting lang:', langSubmit);\r\n\r\n        if (textSubmitting === '') {\r\n            alert('string empty!');\r\n            return;\r\n        } // dont waste GET attempt with empty string, daily 350 limit\r\n        \r\n        if (textSubmitting.length > 49000) {\r\n            alert('string too long!');\r\n            return;\r\n        } // dont waste GET attempt with string exceed 100kb limit\r\n\r\n        // let apikey = \"5\"; // false key for error testing\r\n        let apikey = \"52b16d4b4f1246ee800ea25d1b9fe536\"; // key tied to my email\r\n        // let apilang = \"zh-cn\";\r\n        // let apilang = \"en-us\";\r\n        let apicodec = \"MP3\";\r\n        let apiformat = \"8khz_8bit_mono\"; // default is 8khz_8bit_mono\r\n        let apiB64Status = true; // default is false, true for output as Base64 string format\r\n\r\n        const response = await API.get(`/?key=${apikey}&hl=${langSubmit}&c=${apicodec}&f=${apiformat}&src=${textSubmitting}&b64=${apiB64Status}`);\r\n\r\n        if (response.status === 200) {\r\n            // console.log('200 ok');\r\n            // console.log('Response: ', response);\r\n            // console.log('Response.data: ', response.data);\r\n\r\n            setrcvAudio(response.data);\r\n            \r\n            // testing with simple URL for audio: setrcvAudio(\"https://www.learningcontainer.com/wp-content/uploads/2020/02/Kalimba.mp3\");\r\n            \r\n\r\n        } else {\r\n            console.log('error: ',response.status);\r\n            return;\r\n            }\r\n    }\r\n\r\n    const playAudio = () => {\r\n\r\n        if (rcvAudio===\"\") {\r\n            return (\r\n                <p>no audio currently</p>\r\n            )\r\n        }\r\n\r\n        if (rcvAudio.substring(0,5) === \"ERROR\") {\r\n            return (\r\n                <p>{rcvAudio} Please contact admin</p>\r\n            )\r\n        } // api has its own defined error set\r\n\r\n        return (\r\n            <div>\r\n            <p>have audio</p>\r\n            <audio id=\"audioPlayer\" src={rcvAudio} autoPlay=\"autoplay\">audio not supported</audio>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='canvass'>\r\n            <div className='displayWindow2'>                \r\n                <form onSubmit={handleSubmit}>\r\n                    <h3>Input text for speech return</h3>\r\n\r\n                    <h5>sample text for copy/paste</h5>\r\n\r\n                    <p>Testing 1 2 3, 50,000. This is a chair.</p>\r\n\r\n                    <p>早上好，你吃了吗? 1,500,454</p>\r\n\r\n                    <p>selamat pagi, dah makan? 459</p>\r\n\r\n                    <p>おはようございます、食べましたか? 1,500</p>\r\n\r\n                    <p>좋은 아침, 먹었어? 9</p>\r\n\r\n                    <textarea name=\"audiotext\" rows=\"4\" cols=\"50\" placeholder='Punctuation/numerals ok.' onChange={handleInputChange}></textarea>\r\n\r\n                    {selectLang(langList)}\r\n\r\n                    <input type='submit' value='Submit' />\r\n                </form>\r\n                {playAudio(rcvAudio)}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Testing;","import React, { useState } from 'react';\r\nimport YoutubeMusicApi from 'youtube-music-api';\r\n\r\nfunction YTtesting() {\r\n\r\n    let testText = 'Chandelier';\r\n\r\n    const YTMAPI = new YoutubeMusicApi();\r\n\r\n    YTMAPI.initalize()\r\n        .then(info =>{\r\n            YTMAPI.search(testText, 'song').then(result => console.log('song search: ', result)); \r\n        })\r\n\r\n\r\n    return (\r\n        <div className='canvass'>\r\n            <div className='displayWindow2'>\r\n                <h3>Testing YT Music</h3>\r\n\r\n                <p>{testText}</p>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default YTtesting;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Testing from './testing/test';\nimport YTtesting from './testing/ytmusic';\n// import SingleDisplay from './screens/SingleDisplay';\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <Testing /> */}\n    <YTtesting />\n    {/* <SingleDisplay /> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}